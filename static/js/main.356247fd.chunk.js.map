{"version":3,"sources":["assets/logo.svg","assets/close.svg","assets/wallet-mm.svg","assets/wallet-wc.svg","components/ConnectWalletDrawer.jsx","components/Header.jsx","components/BuyButton.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["ConnectWalletDrawer","addClass","login","useDisclosure","isOpen","onOpen","onClose","useMoralis","isAuthenticated","isAuthenticating","user","isWeb3Enabled","logout","enableWeb3","useChain","switchNetwork","chainId","chain","switchChain","a","handleAuth","e","window","sessionStorage","setItem","removeItem","console","log","error","btnClasses","className","onClick","get","toString","substring","length","size","bg","style","backdropFilter","boxShadow","borderBottomWidth","flexDir","gap","h","fontSize","colorScheme","pb","mx","px","name","marginLeft","border","py","justifyContent","align","disabled","src","walletMM","alt","width","walletWC","CloseIcon","Header","background","logo","BuyButton","map","toLocaleUpperCase","toUpperCase","ml","Main","App","authenticate","isWeb3EnableLoading","Moralis","useWeb3ExecuteFunction","fetch","useEffect","then","catch","provider","signingMessage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","ReactDOM","render","StrictMode","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.356247fd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.568a6dac.svg\";","export default __webpack_public_path__ + \"static/media/close.4a6201f2.svg\";","export default __webpack_public_path__ + \"static/media/wallet-mm.6d14cba9.svg\";","export default __webpack_public_path__ + \"static/media/wallet-wc.a1aae2e6.svg\";","import {\n  Button,\n  ButtonGroup,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  useDisclosure,\n  Flex,\n  Text,\n  Badge,\n  Spacer,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport CloseIcon from \"../assets/close.svg\";\nimport walletMM from \"../assets/wallet-mm.svg\";\nimport walletWC from \"../assets/wallet-wc.svg\";\nimport { useMoralis, useChain } from \"react-moralis\";\n\nfunction ConnectWalletDrawer({ addClass, login }) {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    user,\n    isWeb3Enabled,\n    logout,\n    enableWeb3,\n  } = useMoralis();\n  const { switchNetwork, chainId, chain } = useChain();\n\n  const switchChain = async () => {\n    if (!isWeb3Enabled) {\n      enableWeb3();\n    }\n    switchNetwork(\"0x38\");\n  };\n\n  const handleAuth = async (e) => {\n    // setIsAuthenticated(true);\n    if (e === \"logout\") {\n      await logout();\n      // setAllowance(false);\n      window.sessionStorage.setItem(\"allowance\", \"false\");\n      window.sessionStorage.removeItem(\"allowance\");\n      window.sessionStorage.setItem(\"userAddress\", \"\");\n      window.sessionStorage.removeItem(\"userAddress\");\n      console.log(`Logged Out`);\n      return;\n    }\n    if (!isAuthenticated) {\n      console.log(`Wallet wasn't connected`);\n      console.log(`Trying to connect wallet`);\n      console.log(`Provider = ${e}`);\n      console.log(e === \"walletconnect\");\n      try {\n        if (e === \"walletconnect\") {\n          console.log(`Logging with ${e} - drawer`);\n          await login(e);\n          console.log(`Wallet connected with WC`);\n        } else {\n          // metamask\n          await login();\n          console.log(`Wallet connected with MM`);\n        }\n      } catch (error) {\n        console.log(error);\n        console.error(`dev:issue Wallet connected`);\n      }\n    }\n  };\n\n  const btnClasses = `btn btn__connect_wallet btn-gradient-2 ${addClass}`;\n\n  return (\n    <>\n      <Button className={btnClasses} onClick={onOpen}>\n        {!isAuthenticated\n          ? `Connect Wallet`\n          : user &&\n            `${user.get(\"ethAddress\").toString().substring(0, 5)}\n            ...\n            ${user\n              .get(\"ethAddress\")\n              .toString()\n              .substring(\n                user.get(\"ethAddress\").length - 1,\n                user.get(\"ethAddress\").length - 6\n              )}`}\n      </Button>\n      <Drawer onClose={onClose} isOpen={isOpen} size={\"sm\"} bg=\"Red\">\n        <DrawerOverlay />\n\n        <DrawerContent\n          bg=\"rgba(29, 21, 54, 0.8)\"\n          style={{\n            backdropFilter: \"blur(4px)\",\n            boxShadow: \"4px 4px 4px rgba(0, 0, 0, 0.5)\",\n          }}\n        >\n          <DrawerHeader borderBottomWidth=\"1px\">Connect Wallet</DrawerHeader>\n          <DrawerBody>\n            <Flex flexDir=\"column\" gap=\"1rem\" h=\"100%\">\n              <Flex flexDir=\"column\">\n                <Text fontSize=\"xs\">Status</Text>\n                <Text>\n                  <Badge colorScheme={isAuthenticated ? \"green\" : \"red\"}>\n                    {isAuthenticated ? \"Connected\" : \"Disconnected\"}\n                  </Badge>\n                </Text>\n              </Flex>\n              <Flex flexDir=\"column\">\n                <ButtonGroup gap=\"4\" flexDir=\"column\">\n                  {isAuthenticated ? (\n                    <>\n                      <Flex flexDir=\"column\" gap=\"1rem\">\n                        <Flex flexDir=\"column\">\n                          <Text fontSize=\"xs\">Address</Text>\n                          <Text fontSize=\"sm\">\n                            {user && user.get(\"ethAddress\")}\n                          </Text>\n                        </Flex>\n                        <Flex flexDir=\"column\">\n                          <Text fontSize=\"xs\" pb=\"0.5rem\">\n                            Connected Chain\n                            {/* {console.log(`chainId : ${chainId}`)} */}\n                            {chainId !== \"0x38\" ? (\n                              <Badge mx=\"0.5rem\" px=\".5rem\" colorScheme={\"red\"}>\n                                Wrong Chain\n                              </Badge>\n                            ) : (\n                              ``\n                            )}\n                          </Text>\n                          <Text>\n                            {chainId === \"0x38\"\n                              ? chain && `${chain.name}`\n                              : chain && `${chain.name}`}\n                          </Text>\n                          {chainId !== \"0x38\" && (\n                            <>\n                              <Button\n                                marginLeft=\"0px !important\"\n                                border=\"1px solid #4C5199\"\n                                gap=\".5rem\"\n                                px=\"2rem\"\n                                py=\"1.5rem\"\n                                justifyContent=\"space-between\"\n                                onClick={switchChain}\n                              >\n                                Switch to BSC Mainnet\n                              </Button>\n                            </>\n                          )}\n                        </Flex>\n                      </Flex>\n                      <Button\n                        marginLeft=\"0px !important\"\n                        colorScheme=\"\"\n                        border=\"1px solid #4C5199\"\n                        gap=\".5rem\"\n                        px=\"2rem\"\n                        py=\"1.5rem\"\n                        justifyContent=\"space-between\"\n                        onClick={() => handleAuth(\"logout\")}\n                      >\n                        <Flex gap=\".5rem\" align=\"center\">\n                          Disconnect\n                        </Flex>\n                      </Button>\n                    </>\n                  ) : !isAuthenticating ? (\n                    <>\n                      <Button\n                        colorScheme=\"\"\n                        border=\"1px solid #4C5199\"\n                        px=\"2rem\"\n                        py=\"1.5rem\"\n                        justifyContent=\"space-between\"\n                        onClick={handleAuth}\n                        disabled={isAuthenticated || isAuthenticating}\n                      >\n                        <Flex gap=\".5rem\" align=\"center\">\n                          <img src={walletMM} alt=\"\" width=\"25px\" />\n                          Metamask\n                        </Flex>\n                        <Badge colorScheme=\"green\">Popular</Badge>\n                      </Button>\n                      <Button\n                        marginLeft=\"0px !important\"\n                        colorScheme=\"\"\n                        border=\"1px solid #4C5199\"\n                        gap=\".5rem\"\n                        px=\"2rem\"\n                        py=\"1.5rem\"\n                        justifyContent=\"space-between\"\n                        onClick={() => handleAuth(\"walletconnect\")}\n                        disabled={isAuthenticated || isAuthenticating}\n                      >\n                        <Flex gap=\".5rem\" align=\"center\">\n                          <img src={walletWC} alt=\"\" width=\"25px\" />\n                          Wallet Connect\n                        </Flex>\n                      </Button>\n                    </>\n                  ) : (\n                    <>\n                      <Button\n                        marginLeft=\"0px !important\"\n                        colorScheme=\"\"\n                        border=\"1px solid #4C5199\"\n                        gap=\".5rem\"\n                        px=\"2rem\"\n                        py=\"1.5rem\"\n                        justifyContent=\"space-between\"\n                        disabled={isAuthenticating}\n                      >\n                        <Flex gap=\".5rem\" align=\"center\">\n                          <Spinner />\n                          Wait...\n                        </Flex>\n                      </Button>\n                    </>\n                  )}\n                </ButtonGroup>\n              </Flex>\n              <Spacer />\n              <Button\n                onClick={onClose}\n                gap=\".3rem\"\n                border=\"1px solid #ff6161\"\n                bg=\"transparent\"\n              >\n                <img src={CloseIcon} alt=\"\" width=\"25px\" />\n                Close\n              </Button>\n            </Flex>\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default ConnectWalletDrawer;\n","import logo from \"../assets/logo.svg\";\nimport \"../styles/Header.scss\";\nimport ConnectWalletDrawer from \"./ConnectWalletDrawer\";\n\nfunction Header({ login, logout, isAuthenticated, user }) {\n  return (\n    <>\n      <header className=\"header\" style={{background:\"#1e1e1e\"}}>\n        <img src={logo} className=\"header__logo\" alt=\"logo\" />\n        <ConnectWalletDrawer\n          login={login}\n          logout={logout}\n          isAuthenticated={isAuthenticated}\n          user={user}\n          addClass={\"classes-to-add\"}\n        />\n      </header>\n    </>\n  );\n}\n\nexport default Header;\n","import {\n  Button,\n  ButtonGroup,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  useDisclosure,\n  Flex,\n  Text,\n  Badge,\n  Spacer,\n  Spinner,\n} from \"@chakra-ui/react\";\n\nfunction BuyButton() {\n  const buyingCoinsSupported = [\"BUSD\", \"USDT\", \"BNB\", \"USDC\", \"IBAT\"];\n  return (\n    <>\n      {buyingCoinsSupported.map((e) => (\n        <Button>\n          BUY WITH {e.toLocaleUpperCase()}{\" \"}\n          {e.toUpperCase() === \"IBAT\" && (\n            <Badge ml={\".5rem\"} colorScheme={\"green\"}>\n              10% Discount\n            </Badge>\n          )}\n        </Button>\n      ))}\n    </>\n  );\n}\n\nexport default BuyButton;\n","import BuyButton from \"./BuyButton\";\nimport \"./Main.scss\";\n// import \"./Main.module.scss\";\n\nfunction Main({ login }) {\n  return (\n    <main>\n      {/* <Staking></Staking> */}\n      {/* login={login}  - passed a prop to use the login method*/}\n      <div className=\"progress\">\n        <p className=\"progress__label\">Presale</p>\n        {/* <div className=\"progress__container\">\n          <progress className=\"progress__bar\" id=\"tax\" max=\"100\" value=\"75\">\n            75%\n          </progress>\n        </div> */}\n\n        {/* PROGRESS BAR */}\n        <BuyButton></BuyButton>\n        <div className=\"dprogress__container\">\n          <div className=\"dprogress__bar\">\n            <p className=\"dprogress__title dprogress__title--prefix\">Softcap</p>\n            <p className=\"dprogress__title dprogress__title--value\">50%</p>\n\n            <div className=\"dprogress__value animated-gradient\"></div>\n            <p className=\"dprogress__title dprogress__title--suffix\">Hardcap</p>\n          </div>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport \"./styles/App.scss\";\nimport { useMoralis, useWeb3ExecuteFunction } from \"react-moralis\";\n\nimport Header from \"./components/Header\";\n// eslint-disable-next-line no-unused-vars\nimport Main from \"./components/Main\";\n\nconst isTestnet = true;\nconst CONTRACT_ADDRESS_STAKING = isTestnet\n  ? \"0x859edc92a18fdbc2ae7583e7fefe708240b1b071\"\n  : \"\";\nconst CONTRACT_ADDRESS_IBAT_TOKEN = isTestnet\n  ? \"0xbF22d6b02cF8a85d1DD524a0c2Dc70186d87fA02\"\n  : \"\";\n\n// ---------- APP -------------\nfunction App() {\n  const {\n    authenticate,\n    isWeb3Enabled,\n    isAuthenticated,\n    user,\n    enableWeb3,\n    isWeb3EnableLoading,\n    Moralis,\n  } = useMoralis();\n  const { fetch } = useWeb3ExecuteFunction();\n\n\n  useEffect(() => {\n    if (!isWeb3Enabled && isAuthenticated) {\n      // console.log(`useEffect - App.js`);\n      // console.log(`isWeb3Enabled - ${isWeb3Enabled}`);\n      // console.log(`isAuthenticated - ${isAuthenticated}`);\n      // console.log(`isWeb3EnableLoading - ${isWeb3EnableLoading}`);\n      if (isWeb3EnableLoading)\n        Moralis.enableWeb3()\n          .then(() => {\n            console.log(`isWeb3Enabled✅ - ${Moralis.isWeb3Enabled()}`);\n            console.log(\"web3 activated\");\n          })\n          .catch(() => {\n            console.log(\"❌web3 activation failed\");\n            console.log(`isWeb3Enabled❌- ${Moralis.isWeb3Enabled()}`);\n          });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isWeb3Enabled, isAuthenticated, enableWeb3]);\n\n\n  const login = async (provider) => {\n    if (!isAuthenticated) {\n      let signingMessage = \"Default Authentication Message\";\n      if (!provider) {\n        await authenticate({ signingMessage: signingMessage })\n          .then(async (user) => {\n            console.log(\"logged in user:\", user);\n            user && console.log(user.get(\"ethAddress\"));\n            user &&\n              window.sessionStorage.setItem(\n                \"userAddress\",\n                user.get(\"ethAddress\")\n              );\n          })\n\n          .catch(function (error) {\n            console.log(error);\n            console.error(`dev-failed to authenticate`);\n          });\n      } else if (provider === \"walletconnect\") {\n        console.log(`WC - ${provider === \"walletconnect\"}`);\n        console.log(`Logging with ${provider} - app`);\n        await authenticate({\n          provider: \"walletconnect\",\n          chainId: 56,\n          signingMessage: signingMessage,\n        }).then((user) => {\n          console.log(`isAuthenticated - ${isAuthenticated}.`);\n          console.log(\"logged in user:\", user);\n          console.log(user.get(\"ethAddress\"));\n          console.log(`isAuthenticated - ${isAuthenticated}.`);\n          user && console.log(user.get(\"ethAddress\"));\n          user &&\n            window.sessionStorage.setItem(\n              \"userAddress\",\n              user.get(\"ethAddress\")\n            );\n        });\n        try {\n          console.log(\"logged in user:\", user);\n          user && console.log(user.get(\"ethAddress\"));\n        } catch (error) {\n          console.log(error);\n          console.error(`dev-failed to authenticate with walletconnect`);\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Header login={login}></Header>\n      <Main\n        login={login}\n      ></Main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { MoralisProvider } from \"react-moralis\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  config: {\n    initialColorMode: \"dark\",\n  },\n});\n\n// serverUrl = \"\";\n// appId = \"\";\nconst moralisAppId = \"uee9k8jRkQsPgZgjya7eFngXwKxQJS4q7ScGdB8W\";\nconst moralisServerURL = \"https://uln4op6ulmdb.usemoralis.com:2053/server\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MoralisProvider appId={moralisAppId} serverUrl={moralisServerURL}>\n      <ChakraProvider theme={theme}>\n        <App />\n      </ChakraProvider>\n    </MoralisProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}